name: ci
concurrency: ci

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '**/*.md'

env:
  HUSKY: '0'
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  COVERAGE_PATH: .coverage/
  DB_NAME: DarkDispatcher
  DB_PASSWORD: DarkDispatcher20!

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5434:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .Net ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: build
        run: dotnet build -c Release

      - name: test
        run: dotnet test -c Release --no-build --verbosity=normal --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ${{ env.COVERAGE_PATH }}

      - name: Publish coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.COVERAGE_PATH }}/**/coverage.opencover.xml
          fail_ci_if_error: true
          verbose: false
